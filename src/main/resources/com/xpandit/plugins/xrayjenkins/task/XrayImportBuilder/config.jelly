
<?jelly escape-by-default='false'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout"
         xmlns:t="/lib/hudson" xmlns:f="/lib/form">
  
  ${descriptor.setBuildID()}   
  
  <script src="${resURL}/plugin/xray-jenkins/handlebars-v4.0.5.amd.min.js"></script>
  
  <j:file xmlns:j="jelly:core" var="main" omitXmlDeclaration='true' escapeText='false' trim='true' outputMode='XML'>	    
	  		{{#each configurableFields}}
		  		{{#ifEquals key "importInfo"}}
	  				{{>addSwitcher}}
					<div id="switchContainer">
						{{>addInput}}
					</div>
		  		{{else}}
		  			{{>addInput}}
		  		{{/ifEquals}}
	  		{{/each}}
  </j:file>

  <j:file xmlns:j="jelly:core" var="addInput" omitXmlDeclaration='true' escapeText='false' trim='true' outputMode='XML'>
 		<f:entry title='{{label}}'>
  	 		<input name="_.{{key}}" type="text" class="setting-input" value="{{configuration}}"/>
  		</f:entry>  	 
  </j:file>
  
<j:file xmlns:j="jelly:core" var="addTextarea" omitXmlDeclaration='true' escapeText='false' trim='true' outputMode='HTML'>
			<f:entry title='{{label}}'>
    			<f:textarea field='{{key}}' value="{{configuration}}"/>
			</f:entry>
  </j:file>
  
  <j:file xmlns:j="jelly:core" var="addSwitcher" omitXmlDeclaration='true' escapeText='false' trim='true' outputMode='HTML'>
  		<f:entry name='goalType' field='inputInfoSwitcher'>
		    <select class="setting-input  select" onchange='switchInput("#switchContainer")'>
		        <option value='fileContent'>${%import-parameter.content-type-filecontent}</option>
		        <option value='file Path'>${%import-parameter.content-type-filepath}</option>
		    </select>
		</f:entry>
  </j:file>
  
  <script id="_${descriptor.defaultBuildID()}">
    (function(){
    
       var mainTemplate = '';
    
	   addXrayFields_${descriptor.defaultBuildID()} = function(){
	   		
	   		console.info('Adding fields...')
		    console.info(mainTemplate);
	   		
			var dynamicFields = '${instance.getDynamicFields()}';
	  		var formats = '${instance.defaultFormats()}';
			
			if(formats !== '')
				formats = JSON.parse(formats);
			else
				formats = JSON.parse('${descriptor.defaultFormats()}');
			
			
			var selectedFormat;
			if(arguments.length > 0)
				selectedFormat = formats[arguments[0]];
			else
				selectedFormat = formats[Object.keys(formats)[0]];
			
			console.info(selectedFormat);
			
			//Three steps: fetch template, compile it, generate result with the context data 
			var template = Handlebars.compile(mainTemplate);	
			var result = template(selectedFormat);
	   		
	   		Q('#configurableFields_${descriptor.defaultBuildID()}').html(result); 
	   		
		}
		
	  /*
	   * Switches the HTML element for the importInfo field
	   */
	  switchInput = function(container){
	  	console.info(container);
	  }
		
		
	  Q(document).ready(function() {
	  
	  		//template loading
			Q.ajax({
		   	 url: '${resURL}/plugin/xray-jenkins/xray-import-buildstepconfig.html',
		     cache: false,
		     dataType: "html",
		     success: function(data) {
		     	mainTemplate = data;
		     	console.info('loaded')
		     	console.info(mainTemplate);
		     	
		     	//Handlebars is a kind of 'logic-less' like mustache, so it does not provide the equals operator
		    	Handlebars.registerHelper('ifEquals', function(arg1, arg2, options) {
		   			return (arg1 == arg2) ? options.fn(this) : options.inverse(this);
				});
				
				//Register partial templates, used for call templates inside templates
				Handlebars.registerPartial("addInput",'${addInput}');
				Handlebars.registerPartial("addTextarea", '${addTextarea}');
				Handlebars.registerPartial("addSwitcher", '${addSwitcher}');
				
				//register event-handler
		    	Q('#selectFormat_${descriptor.defaultBuildID()}').on('change',function(e){
		    		addXrayFields_${descriptor.defaultBuildID()}(e.currentTarget.options[e.currentTarget.selectedIndex].text);
		    	});
				
				//get last chosen format
				var formatName = '${instance.getFormatName()}';
				
				//if no format was chosen, select the first one from the formats/endpoints list
				if(formatName == '')
					addXrayFields_${descriptor.defaultBuildID()}();
				else
				    addXrayFields_${descriptor.defaultBuildID()}(formatName); //making sure that the select gets the last configuration value

		     	} 
			});
    	
	 });
   			
   			
   	})();
   	    		
</script>

  <f:entry title="${%JIRA Instance}" field="serverInstance">
   		<f:select/>
   </f:entry>
     
  <f:validateButton title="${%Test Connection}" progress="${%Testing...}"
   method="testConnection" with="serverUrl,serverUsername,serverPassword" />
      
   <f:entry title="${%Format}" field="formatSuffix">
   		<f:select id="selectFormat_${descriptor.defaultBuildID()}"/>

   		<f:section name="dynamicFields">	
   			<f:entry>	
   				<p id="configurableFields_${descriptor.defaultBuildID()}" style="border-left:solid;border-color:#00a3ac;width:50vw"></p>		
   			</f:entry>
   		</f:section>
 
   </f:entry>

   
</j:jelly>

